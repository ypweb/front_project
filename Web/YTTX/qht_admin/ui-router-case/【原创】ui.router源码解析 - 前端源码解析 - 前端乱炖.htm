<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <link rel="Shortcut Icon" href="http://htmljs.b0.upaiyun.com//images/logo.ico?123">
    <link href="http://htmljs.b0.upaiyun.com//images/logo.ico?123" rel="shortcut icon" type="image/x-icon">
    <link rel="stylesheet" href="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/bootstrap.css" type="text/css">
    <link rel="stylesheet" href="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/main.css" type="text/css">
    <link rel="stylesheet" href="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/prettify.css" type="text/css">
    <link rel="stylesheet" href="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/glyphicons.css" type="text/css">
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/jquery.js"></script>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/htmljs.js"></script>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/prettify.js"></script><meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="http://htmljs.b0.upaiyun.com//images/icon.png" rel="apple-touch-icon">
    <meta name="keywords" content="前端, 前端开发, web前端, web前端开发, 前端开发工程师, 前端开发攻城师,设计, 开发, 前端资源, CSS, JavaScript, Ajax, jQuery, html,html5,css3,浏览器兼容, 前端开发工具, 前端招聘, jQuery API, CSS整形和优化工具 , JS压缩工具 , JS格式化工具 , CSS参考手册 ,HTML参考手册 , 多重搜索 , nodejs , node , boostrap , sublime">
    <meta name="baidu-site-verification" content="OnKVgNu37S">
    <script>if($.browser.msie<8){alert("请不要使用ie浏览本站！本站不支持ie10以下浏览器。")}</script>
    <title>【原创】ui.router源码解析 - 前端源码解析 - 前端乱炖</title><meta name="description" content="angular路由路由(route)，几乎所有的MVC(VM)框架都应该具有的特性，因为它是前端构建单页面应用(SPA)必不可少的组成部分。那么，对于angular而言，它自然也有内置的路由模块：叫做">
    <style>
      #bdshare a{}
      .ad-blank{opacity:0.6;}
    </style>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/bootstrap-tooltip.js"></script>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/bootstrap-scrollspy.js"></script>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/tips.js"></script>
    <link rel="stylesheet" href="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/tips.css" type="text/css">
  <link href="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/bdsstyle.css" rel="stylesheet" type="text/css"><script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/logger.js"></script></head>
  <body id="article"><iframe style="display: none;" frameborder="0"></iframe>
    <div id="header">
      <div class="wrapper clearfix"><a href="http://www.html-js.com/" title="前端乱炖" class="logo"><span class="dun">炖</span></a>
        <div class="navbar navbar-inverse">
          <div class="navbar-inner">
            <div class="container">
              <div class="nav-collapse collapse">
                <ul class="nav left-nav">
                  <li pageid="0" class=""><a href="http://www.html-js.com/"><i class="icon-home"></i>首页</a></li>
                  <li pageid="1" class="active"><a href="http://www.html-js.com/article"><i class="icon-book-open"></i>专栏</a></li>
                  <li pageid="7" class=""><a href="http://www.html-js.com/qa"><i class="icon-lightbulb"></i>问答</a></li>
                  <li pageid="10" class=""><a href="http://www.html-js.com/topic"><i class="icon-group"></i>讨论区</a></li>
                  <li pageid="20" class="hidden "><a href="http://www.html-js.com/talk"><i class="icon-conversation"></i>实时讨论</a></li>
                  <li pageid="15" class="hidden "><a href="http://www.html-js.com/blog"><i class="icon-sampler"></i>博集</a></li>
                  <li pageid="8" class="hidden "><a href="http://www.html-js.com/tag">标签</a></li>
                  <li pageid="2" class="hidden "><a href="http://www.html-js.com/job"><i class="icon-leaf"></i>招聘</a></li>
                  <li pageid="2" class=""><a href="http://www.html-js.com/cards"><i class="icon-nameplate"></i>花名册</a></li>
                  <li pageid="101" class=""><a href="http://www.jiankongbao.com/labs/http">免费性能测试</a></li>
                  <li class="search">
                    <form action="/search" method="get" style="margin:0;"><i class="icon-search"></i>
                      <input id="keyword" name="q" placeholder="搜索全站、站外内容" class="span2 input-large" type="text">
                    </form>
                  </li>
                  <li pageid="6" class="hidden "><a href="http://www.html-js.com/book">免费送书</a></li>
                </ul>
                <ul class="right-nav">
                  <li><a href="http://www.html-js.com/user/login?redirect=%2Farticle%2FFront-end-source-code-analysis-original-uirouter-source-code-analysis">登录</a></li>
                  <li><a href="http://www.html-js.com/talk"><i class="icon-conversation"></i>在线聊天</a></li>
                  <li class="hidden sub-trigger"><a>其他功能</a>
                    <ul class="sub-menu hidden">
                      <li pageid="5" class=""><a href="http://www.html-js.com/act">活动</a></li>
                      <li pageid="9" class=""><a href="http://www.html-js.com/tools"><i class="icon-classic-hammer hidden"></i>常用工具</a><span class="my-favs"></span></li>
                      <li><a href="http://www.html-js.com/talk">
                           
                          实时讨论</a></li>
                    </ul>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
      $(document).ready(function(){
        $(".sub-trigger").mouseenter(function(){
          $(".sub-menu",this).removeClass("hidden")
          }).mouseleave(function(){
          $(".sub-menu",this).addClass("hidden")
          })
        })       
    </script>
    <div id="content" class="clearfix">
      <div class="daen"></div>
      <ul class="breadcrumb hidden">
        <li><a href="http://www.html-js.com/">首页</a><span class="divider">/</span></li>
        <li><a href="http://www.html-js.com/article">所有专栏</a><span class="divider">/</span></li>
        <li><a href="http://www.html-js.com/article/column/693">前端源码解析</a><span class="divider">/</span></li>
        <li class="active"><span>【原创】ui.router源码解析</span></li>
      </ul>
      <div class="title">
        <div class="wrapper">
          <div style="font-size: 30px;line-height:50px;" href="http://p.html-js.com/article/2863" title="【原创】ui.router源码解析" rel="bookmark" class="32">【原创】ui.router源码解析</div>
          <div class="info">
            <div class="line"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/1200" class="value url fn">Lovesueee</a> 发布在<a href="http://www.html-js.com/article/column/693" class="value">前端源码解析</a></span><span class="item">2016年2月24日</span><span class="item"><span class="index">view：</span><span class="value">15141</span></span><span style="margin-right:10px;color:#999;" class="item">前端开发</span><span style="margin-right:10px;color:#999;" class="item">Angularjs</span>
            </div>
          </div>
        </div>
      </div>
      <div class="content-wapper">
        <div class="content">
          <div class="left"><a href="http://t.cn/Ri2cBT0" style="margin-top:20px;opacity:1;display:block;background: #eee;margin: 10px 0;cursor: pointer;"> <img src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1487998258135-ee1ba88327a47ae94c9d34f8755d0a63.png"></a>
            <div style="margin-top:20px;" class="alert">在文章任何区域双击击即可给文章添加【评注】！浮到评注点上可以查看详情。<div class="checkbox" style="float:right;line-height:40px;color:#333;padding-top:3px;"><label><input id="hide_tip" type="checkbox">隐藏标注</label></div></div>
            <article id="post-2863" style="overflow:hidden;" class="post">
              <div class="wrapper">
                <div style="padding-top:0;" class="entry-content"><!--<a href="http://passport.lagou.com/landingPage.html?utm_source=AD__html-js&amp;utm_medium=banner&amp;utm_campaign=lp" class="ad-blank"></a><img src="http://htmljs.b0.upaiyun.com/uploads/1439192041460-7786e01e91744693f0cc2c15f7ce9ab3.png">--><h1>angular路由</h1>

<blockquote>
  <p>路由<code class=" language-javascript"><span class="token punctuation">(</span>route<span class="token punctuation">)</span></code>，几乎所有的<code class=" language-javascript"><span class="token function">MVC<span class="token punctuation">(</span></span>VM<span class="token punctuation">)</span></code>框架都应该具有的特性，因为它是前端构建单页面应用<code class=" language-javascript"><span class="token punctuation">(</span>SPA<span class="token punctuation">)</span></code>必不可少的组成部分。</p>
</blockquote>

<hr>

<p>那么，对于<code class=" language-javascript">angular</code>而言，它自然也有<code class=" language-javascript">内置</code>的路由模块：叫做<code class=" language-javascript">ngRoute</code>。</p>

<p>不过，大家很少用它，因为它的功能太有限，往往不能满足开发需求！！</p>

<p>于是，一个基于<code class=" language-javascript">ngRoute</code>开发的<strong>第三方路由模块</strong>，叫做<code class=" language-javascript">ui<span class="token punctuation">.</span>router</code>，受到了大家的“追捧”。</p>

<hr>

<h3>ngRoute vs ui.router</h3>

<p>首先，无论是使用哪种路由，作为框架额外的附加功能，它们都将以<code class=" language-javascript">模块依赖</code>的形式被引入，简而言之就是：在引入路由<code class=" language-javascript">源文件</code>之后，你的代码应该这样写(以<code class=" language-javascript">ui<span class="token punctuation">.</span>router</code>为例)：</p>

<pre class=" language-javascript"><code class=" language-javascript">angular<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span><span class="token string">"myApp"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"ui.router"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // myApp为自定义模块，依赖第三方路由模块ui.router</span></code></pre>

<p>这样做的目的是：<strong>在程序启动(bootstrap)的时候，加载依赖模块(如：ui.router)，将所有<code class=" language-javascript">挂载</code>在该模块的<code class=" language-javascript">服务<span class="token punctuation">(</span>provider<span class="token punctuation">)</span></code>，<code class=" language-javascript">指令<span class="token punctuation">(</span>directive<span class="token punctuation">)</span></code>，<code class=" language-javascript">过滤器<span class="token punctuation">(</span>filter<span class="token punctuation">)</span></code>等都进行注册</strong>，那么在后面的程序中便可以调用了。</p>

<p>说到这里，就得看看<code class=" language-javascript">ngRoute模块</code>和<code class=" language-javascript">ui<span class="token punctuation">.</span>router模块</code>各自都提供了哪些服务，哪些指令？</p>

<ol>
<li><p>ngRoute</p>

<ul><li>$routeProvider(服务提供者)    ——— 对应于下面的urlRouterProvider和stateProvider</li>
<li>$route(服务)   ——— 对应于下面的urlRouter和state</li>
<li>$routeParams(服务)    ——— 对应于下面的stateParams</li>
<li>ng-view(指令)   ——— 对应于下面的ui-view</li></ul></li>
<li><p>ui.router</p>

<ul><li>$urlRouterProvider(服务提供者)   ——— 用来配置路由重定向</li>
<li>$urlRouter(服务)</li>
<li>$stateProvider(服务提供者)     ——— 用来配置路由</li>
<li>$state(服务)    ——— 用来显示当前路由状态信息，以及一些路由方法（如：跳转）</li>
<li>$stateParams(服务)    ——— 用来存储路由匹配时的参数</li>
<li>ui-view(指令)    ——— 路由模板渲染，对应的dom相关联</li>
<li>ui-sref(指令)</li>
<li>…</li></ul></li>
</ol>

<p>(<code class=" language-javascript">注</code>：<em>服务提供者：用来提供服务实例和配置服务。</em>)</p>

<p>这样一看，其实<code class=" language-javascript">ui<span class="token punctuation">.</span>router</code>和<code class=" language-javascript">ngRoute</code>大体的设计思路，对应的模块划分都是一致的(毕竟是同一个团队开发)，不同的地方在于功能点的实现和<code class=" language-javascript">增强</code>。</p>

<hr>

<p>那么问题来了：<code class=" language-javascript">ngRoute</code>弱在哪些方面，<code class=" language-javascript">ui<span class="token punctuation">.</span>router</code>怎么弥补了这些方面?</p>

<p>这里，列举两个最重要的方面来说(其他细节，后面再说)：</p>

<ol>
<li>多视图</li>
<li>嵌套视图</li>
</ol>

<hr>

<h5>多视图</h5>

<blockquote>
  <p>多视图：页面可以显示多个动态变化的不同区块。</p>
</blockquote>

<p>这样的业务场景是有的：</p>

<p>比如：页面一个区块用来显示页面状态，另一个区块用来显示页面主内容，当路由切换时，页面状态跟着变化，对应的页面主内容也跟着变化。</p>

<p>首先，我们尝试着用<code class=" language-javascript">ngRoute</code>来做：</p>

<p>html</p>

<pre class=" language-javascript"><code class=" language-javascript"><span class="token operator">&lt;</span>div ng<span class="token operator">-</span>view<span class="token operator">&gt;</span>区块<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div ng<span class="token operator">-</span>view<span class="token operator">&gt;</span>区块<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></code></pre>

<p>js</p>

<pre class=" language-javascript"><code class=" language-javascript">$routeProvider
    <span class="token punctuation">.</span><span class="token function">when<span class="token punctuation">(</span></span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        template<span class="token punctuation">:</span> <span class="token string">'hello world'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>我们在html中利用ng-view指令定义了两个区块，于是两个div中显示了相同的内容，这很合乎情理，但却不是我们想要的，但是又不能为力，因为，在ngRoute中：</p>

<ol>
<li>视图没有名字进行唯一标志，所以它们被同等的处理。</li>
<li>路由配置只有一个模板，无法配置多个。</li>
</ol>

<p>ok，针对上述两个问题，我们尝试用<code class=" language-javascript">ui<span class="token punctuation">.</span>router</code>来做：</p>

<p>html</p>

<pre class=" language-javascript"><code class=" language-javascript">  <span class="token operator">&lt;</span>div ui<span class="token operator">-</span>view<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div ui<span class="token operator">-</span>view<span class="token operator">=</span><span class="token string">"status"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></code></pre>

<p>js</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'home'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>
        views<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">''</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                template<span class="token punctuation">:</span> <span class="token string">'hello world'</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">'status'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                template<span class="token punctuation">:</span> <span class="token string">'home page'</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>这次，结果是我们想要的，两个区块，分别显示了不同的内容，原因在于，在ui.router中：</p>

<ol>
<li>可以给视图命名，如：ui-view=”status”。</li>
<li>可以在路由配置中根据视图名字(如：status)，配置不同的模板（其实还有controller等）。</li>
</ol>

<p><code class=" language-javascript">注</code>：视图名是一个字符串，不可以包含<code class=" language-javascript">@</code>（原因后面会说）。</p>

<hr>

<h5>嵌套视图</h5>

<blockquote>
  <p>嵌套视图：页面某个动态变化区块中，嵌套着另一个可以动态变化的区块。</p>
</blockquote>

<p>这样的业务场景也是有的：</p>

<p>比如：页面一个主区块显示主内容，主内容中的部分内容要求根据路由变化而变化，这时就需要另一个动态变化的区块嵌套在主区块中。</p>

<p>其实，嵌套视图，在html中的最终表现就像这样：</p>

<pre class=" language-javascript"><code class=" language-javascript"><span class="token operator">&lt;</span>div ng<span class="token operator">-</span>view<span class="token operator">&gt;</span>
    I am parent
    <span class="token operator">&lt;</span>div ng<span class="token operator">-</span>view<span class="token operator">&gt;</span>I am child<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></code></pre>

<p>转成javascript，我们会在程序里这样写：</p>

<pre class=" language-javascript"><code class=" language-javascript">$routeProvider
    <span class="token punctuation">.</span><span class="token function">when<span class="token punctuation">(</span></span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        template<span class="token punctuation">:</span> <span class="token string">'I am parent &lt;div ng-view&gt;I am child&lt;/div&gt;'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>倘若，你真的用<code class=" language-javascript">ngRoute</code>这样写，你会发现浏览器崩溃了，因为在ng-view指令link的过程中，代码会无限递归下去。</p>

<p>那么造成这种现象的最根本原因：<strong>路由没有明确的父子层级关系！</strong></p>

<p>看看<code class=" language-javascript">ui<span class="token punctuation">.</span>router</code>是如何解决这一问题的？</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'parent'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        abstract<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>
        template<span class="token punctuation">:</span> <span class="token string">'I am parent &lt;div ui-view&gt;&lt;/div&gt;'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'parent.child'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
        template<span class="token punctuation">:</span> <span class="token string">'I am child'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<ol>
<li>巧妙地，通过<code class=" language-javascript">parent</code>与<code class=" language-javascript">parent<span class="token punctuation">.</span>child</code>来确定路由的<code class=" language-javascript">父子关系</code>，从而解决无限递归问题。</li>
<li>另外子路由的模板最终也将被插入到父路由模板的div[ui-view]中去，从而达到视图嵌套的效果。</li>
</ol>

<hr>

<h3>ui.router工作原理</h3>

<blockquote>
  <p>路由，大致可以理解为：一个<code class=" language-javascript">查找匹配</code>的过程。</p>
</blockquote>

<p>对于前端<code class=" language-javascript"><span class="token function">MVC<span class="token punctuation">(</span></span>VM<span class="token punctuation">)</span></code>而言，就是将<code class=" language-javascript">hash值</code>(#xxx)与一系列的<code class=" language-javascript">路由规则</code>进行查找匹配，匹配出一个符合条件的规则，然后根据这个规则，进行数据的获取，以及页面的渲染。</p>

<p>所以，接下来：</p>

<ul>
<li>第一步，学会如何创建路由规则？</li>
<li>第二步，了解路由查找匹配原理？</li>
</ul>

<hr>

<h5>路由的创建</h5>

<p>首先，看一个简单的例子：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'home'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">'/abc'</span><span class="token punctuation">,</span>
        template<span class="token punctuation">:</span> <span class="token string">'hello world'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>上面，我们通过调用<code class=" language-javascript">$stateProvider<span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code>方法，创建了一个简单路由规则，通过参数，可以容易理解到：</p>

<ol>
<li>规则名：’home’</li>
<li>匹配的url：’/abc’</li>
<li>对应的模板：’hello world’</li>
</ol>

<p>意思就是说：当我们访问<code class=" language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xxxx#<span class="token operator">/</span>abc</code>的时候，这个路由规则被匹配到，对应的模板会被填到某个<code class=" language-javascript">div<span class="token punctuation">[</span>ui<span class="token operator">-</span>view<span class="token punctuation">]</span></code>中。</p>

<p>看上去似乎很简单，那是因为我们还没有深究具体的一些路由配置参数（我们后面再说）。</p>

<p>这里需要深入的是：<code class=" language-javascript">$stateProvider<span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code>方法，它做了些什么工作？</p>

<ol>
<li>首先，创建并存储一个state对象，里面包含着该路由规则的所有配置信息。</li>
<li>然后，调用<code class=" language-javascript">$urlRouterProvider<span class="token punctuation">.</span><span class="token function">when<span class="token punctuation">(</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code>方法，进行路由的<code class=" language-javascript">注册</code>(之前是路由的创建)，代码里是这样写的：</li>
</ol>

<pre class=" language-javascript"><code class=" language-javascript">$urlRouterProvider<span class="token punctuation">.</span><span class="token function">when<span class="token punctuation">(</span></span>state<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'$match'</span><span class="token punctuation">,</span> <span class="token string">'$stateParams'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>$match<span class="token punctuation">,</span> $stateParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment" spellcheck="true"> // 判断是否是同一个state || 当前匹配参数是否相同
</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>$state<span class="token punctuation">.</span>$current<span class="token punctuation">.</span>navigable <span class="token operator">!</span><span class="token operator">=</span> state <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">equalForKeys<span class="token punctuation">(</span></span>$match<span class="token punctuation">,</span> $stateParams<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $state<span class="token punctuation">.</span><span class="token function">transitionTo<span class="token punctuation">(</span></span>state<span class="token punctuation">,</span> $match<span class="token punctuation">,</span> <span class="token punctuation">{</span> inherit<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> location<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>上述代码的意思是：当<code class=" language-javascript">hash值</code>与<code class=" language-javascript">state<span class="token punctuation">.</span>url</code>相匹配时，就执行后面那段回调，回调函数里面进行了两个条件判断之后，决定是否需要跳转到该state？</p>

<hr>

<p>这里就插入了一个话题：为什么说 “跳转到该state，而不是该url”？</p>

<p>其实这个问题跟大家一直说的：“<strong><code class=" language-javascript">ui<span class="token punctuation">.</span>router是基于<span class="token function">state<span class="token punctuation">(</span></span>状态<span class="token punctuation">)</span>的，而不是url</code></strong>”是同一个问题。</p>

<p>我的理解是这样的：之前就说过，路由存在着明确的<code class=" language-javascript">父子关系</code>，每一个路由可以理解为一个state，</p>

<ol>
<li>当程序匹配到某一个子路由时，我们就认为这个子路由state被激活，同时，它对应的父路由state也将被激活。</li>
<li>我们还可以手动的激活某一个state，就像上面写的那样，<code class=" language-javascript">$state<span class="token punctuation">.</span><span class="token function">transitionTo<span class="token punctuation">(</span></span>state<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>，这样的话，它的父state会被激活（如果还没有激活的话），它的子state会被销毁（如果已经激活的话）。</li>
</ol>

<hr>

<p>ok，回到之前的路由注册，调用了<code class=" language-javascript">$urlRouterProvider<span class="token punctuation">.</span><span class="token function">when<span class="token punctuation">(</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code>方法，它做了什么呢？</p>

<p>它创建了一个rule，并存储在rules集合里面，之后的，每次hash值变化，路由重新查找匹配都是通过遍历这个<code class=" language-javascript">rules</code>集合进行的。</p>

<hr>

<h5>路由的查找匹配</h5>

<p>有了之前，路由的创建和注册，接下来，自然会想到路由是如何查找匹配的？</p>

<p>恐怕，这得从页面加载完毕说起：</p>

<ol>
<li>angular 在刚开始的$digest时，<code class=" language-javascript">$rootScope</code>会触发<code class=" language-javascript">$locationChangeSuccess</code>事件（angular在每次浏览器hash change的时候也会触发<code class=" language-javascript">$locationChangeSuccess</code>事件）</li>
<li>ui.router 监听了<code class=" language-javascript">$locationChangeSuccess</code>事件，于是开始通过遍历一系列rules，进行路由查找匹配</li>
<li>当匹配到路由后，就通过<code class=" language-javascript">$state<span class="token punctuation">.</span><span class="token function">transitionTo<span class="token punctuation">(</span></span>state<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code>，跳转激活对应的state</li>
<li>最后，完成数据请求和模板的渲染</li>
</ol>

<p>可以从下面这段源代码看到，看到查找匹配的起始和过程：</p>

<pre class=" language-javascript"><code class=" language-javascript"><span class="token keyword">function</span> <span class="token function">update<span class="token punctuation">(</span></span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment" spellcheck="true"> // ...省略
</span>  <span class="token keyword">function</span> <span class="token function">check<span class="token punctuation">(</span></span>rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> handled <span class="token operator">=</span> <span class="token function">rule<span class="token punctuation">(</span></span>$injector<span class="token punctuation">,</span> $location<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment" spellcheck="true"> // handled可以是返回：
</span>   <span class="token comment" spellcheck="true"> // 1. 新的的url，用于重定向
</span>   <span class="token comment" spellcheck="true"> // 2. false，不匹配
</span>   <span class="token comment" spellcheck="true"> // 3. true，匹配
</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>handled<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString<span class="token punctuation">(</span></span>handled<span class="token punctuation">)</span><span class="token punctuation">)</span> $location<span class="token punctuation">.</span><span class="token function">replace<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">url<span class="token punctuation">(</span></span>handled<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> n <span class="token operator">=</span> rules<span class="token punctuation">.</span>length<span class="token punctuation">,</span> i<span class="token punctuation">;</span>

 <span class="token comment" spellcheck="true"> // 渲染遍历rules，匹配到路由，就停止循环
</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check<span class="token punctuation">(</span></span>rules<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token comment" spellcheck="true"> // 如果都匹配不到路由，使用otherwise路由(如果设置了的话)
</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>otherwise<span class="token punctuation">)</span> <span class="token function">check<span class="token punctuation">(</span></span>otherwise<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">listen<span class="token punctuation">(</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment" spellcheck="true"> // 监听$locationChangeSuccess，开始路由的查找匹配
</span>  listener <span class="token operator">=</span> listener <span class="token operator">||</span> $rootScope<span class="token punctuation">.</span>$<span class="token function">on<span class="token punctuation">(</span></span><span class="token string">'$locationChangeSuccess'</span><span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> listener<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>interceptDeferred<span class="token punctuation">)</span> <span class="token function">listen<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<hr>

<p>那么，问题来了：难道每次路由变化(hash变化)，由于监听了’$locationChangeSuccess’事件，都要进行rules的<code class=" language-javascript">遍历</code>来查找匹配路由，然后跳转到对应的state吗？</p>

<p>答案是：肯定的，一般的路由器都是这么做的，包括ngRoute。</p>

<p>那么ui.router对于这样的问题，会怎么进行<code class=" language-javascript">优化</code>呢？</p>

<p>回归到问题：我们之所以要循环遍历rules，是因为要查找匹配到对应的路由(state)，然后跳转过去，倘若不循环，能直接找到对应的state吗？</p>

<p>答案是：可以的。</p>

<p>还记得前面说过，在用ui.router在创建路由时：</p>

<ol>
<li>会实例化一个对应的state对象，并存储起来(states集合里面)</li>
<li>每一个state对象都有一个state.name进行唯一标识(如：’home’)</li>
</ol>

<p>根据以上两点，于是ui.router提供了另一个指令叫做：<code class=" language-javascript">ui<span class="token operator">-</span>sref指令</code>，来解决这个问题，比如这样：</p>

<pre class=" language-javascript"><code class=" language-javascript"><span class="token operator">&lt;</span>a ui<span class="token operator">-</span>sref<span class="token operator">=</span><span class="token string">"home"</span><span class="token operator">&gt;</span>通过ui<span class="token operator">-</span>sref跳转到home state<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></code></pre>

<p>当点击这个a标签时，会直接跳转到home state，而并不需要循环遍历rules，ui.router是这样做到的(这里简单说一下)：</p>

<p>首先，ui-sref=”home”指令会给对应的dom添加<code class=" language-javascript">click事件</code>，然后根据state.name，直接跳转到对应的state，代码像这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">element<span class="token punctuation">.</span><span class="token function">bind<span class="token punctuation">(</span></span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment" spellcheck="true"> // ..省略若干代码
</span>    <span class="token keyword">var</span> transition <span class="token operator">=</span> $<span class="token function">timeout<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment" spellcheck="true"> // 手动跳转到指定的state
</span>      $state<span class="token punctuation">.</span><span class="token function">go<span class="token punctuation">(</span></span>ref<span class="token punctuation">.</span>state<span class="token punctuation">,</span> params<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>跳转到对应的state之后，ui.router会做一个善后处理，就是改变hash，所以理所当然，会触发’$locationChangeSuccess’事件，然后执行回调，但是在回调中可以通过一个判断代码规避循环rules，像这样：</p>

<pre class=" language-javascript"><code class=" language-javascript"><span class="token keyword">function</span> <span class="token function">update<span class="token punctuation">(</span></span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> ignoreUpdate <span class="token operator">=</span> lastPushedUrl <span class="token operator">&amp;&amp;</span> $location<span class="token punctuation">.</span><span class="token function">url<span class="token punctuation">(</span></span><span class="token punctuation">)</span> <span class="token operator">===</span> lastPushedUrl<span class="token punctuation">;</span>

 <span class="token comment" spellcheck="true"> // 手动调用$state.go(...)时，直接return避免下面的循环
</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>ignoreUpdate<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

 <span class="token comment" spellcheck="true"> // 省略下面的循环ruls代码
</span><span class="token punctuation">}</span></code></pre>

<p>说了那么多，其实就是想说，我们<code class=" language-javascript">不建议直接使用href<span class="token operator">=</span><span class="token string">"#/xxx"</span>来改变hash</code>，然后跳转到对应state(虽然也是可以的)，因为这样做会多了一步rules循环遍历，浪费性能，就像下面这样：</p>

<pre class=" language-javascript"><code class=" language-javascript"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#/abc"</span><span class="token operator">&gt;</span>通过href跳转到home state<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></code></pre>

<hr>

<h3>路由详解</h3>

<blockquote>
  <p>这里详细地介绍ui.router的参数配置和一些深层次用法。</p>
</blockquote>

<hr>

<p>不过，在这之前，需要一个demo，ui.router的<a href="http://angular-ui.github.io/ui-router/sample/#/">官网demo</a>无非就是最好的学习例子，里面涉及了大部分的知识点，所以接下来的代码讲解大部分都会是这里面的(建议下载到本地进行代码学习)。</p>

<p>为了更好的学习这个demo，我画了一张图来描述这个demo的contacts部分各个视图模块，如下：</p>

<p><img src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/TB1rRR1HFXXXXcXXpXXH4A8PVXX-722-492.png" alt="视图模块" title=""></p>

<hr>

<h5>父与子</h5>

<p>之前就说到，在ui.router中，路由就有父与子的关系(多个父与子凑起来就有了，祖先和子孙的关系)，从javascript的角度来说，其实就是路由对应的state对象之间存在着某种<code class=" language-javascript">引用</code>的关系。</p>

<p>用一张数据结构的表示下contacts部分，大概是这样(<a href="http://gtms01.alicdn.com/tps/i1/TB1je9bHFXXXXXEXXXXysygGpXX-2481-1686.jpg">原图</a>)：</p>

<p><img src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/TB1je9bHFXXXXXEXXXXysygGpXX-2481-1686.jpg" alt="state" title=""></p>

<p>上面的图看着有点乱，不过没关系，起码能看出各个state对象之间通过<code class=" language-javascript">parent</code>字段维系了这样一个<code class=" language-javascript">父与子</code>的关系(粉红色的线)。</p>

<p>ok，接下来就看下是如何定义路由的父子关系的？</p>

<p>假设有一个父路由，如下：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'contacts'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>ui.router提供了几种方法来定义它的子路由：</p>

<p>1.点标记法(<code class=" language-javascript">推荐</code>)</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'contacts.list'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>通过<code class=" language-javascript">状态名</code>简单明了地来确定父子路由关系，如：状态名为’a.b.c’的路由，对应的父路由就是状态名为’a.b’路由。</p>

<p>2.<code class=" language-javascript">parent</code>属性</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token punctuation">{</span>
        name<span class="token punctuation">:</span> <span class="token string">'list'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true"> // 状态名也可以直接在配置里指定
</span>        parent<span class="token punctuation">:</span> <span class="token string">'contacts'</span> <span class="token comment" spellcheck="true"> // 父路由的状态名
</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>或者：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token punctuation">{</span>
        name<span class="token punctuation">:</span> <span class="token string">'list'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true"> // 状态名也可以直接在配置里指定
</span>        parent<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true"> // parent也可以是一个父路由配置对象(指定路由的状态名即可)
</span>            name<span class="token punctuation">:</span> <span class="token string">'contacts'</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>通过<code class=" language-javascript">parent</code>直接指定父路由，可以是父路由的状态名(字符串)，也可以是一个包含状态名的父路由配置(对象)。</p>

<hr>

<p>竟然路由有了<code class=" language-javascript">父与子</code>的关系，那么它们的注册顺序有要求嘛？</p>

<p>答案是：没有要求，我们可以在父路由存在之前，创建子路由(不过，不是很推荐)，因为ui.router在遇到这种情况时，在内部会帮我们先<code class=" language-javascript">缓存</code>子路由的信息，等待它的父路由注册完毕后，再进行子路由的注册。</p>

<hr>

<h5>模板渲染</h5>

<p>当路由成功跳转到指定的state时，ui.router会触发<code class=" language-javascript"><span class="token string">'$stateChangeSuccess'</span></code>事件通知所有的<code class=" language-javascript">ui<span class="token operator">-</span>view</code>进行模板重新渲染。</p>

<p>代码是这样的：</p>

<pre class=" language-javascript"><code class=" language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>notify<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  $rootScope<span class="token punctuation">.</span>$<span class="token function">broadcast<span class="token punctuation">(</span></span><span class="token string">'$stateChangeSuccess'</span><span class="token punctuation">,</span> to<span class="token punctuation">.</span>self<span class="token punctuation">,</span> toParams<span class="token punctuation">,</span> from<span class="token punctuation">.</span>self<span class="token punctuation">,</span> fromParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>

<p>而<code class=" language-javascript">ui<span class="token operator">-</span>view</code>指令在进行<code class=" language-javascript">link</code>的时候，在其内部就已经监听了这一事件(消息)，来随时更新视图：</p>

<pre class=" language-javascript"><code class=" language-javascript">scope<span class="token punctuation">.</span>$<span class="token function">on<span class="token punctuation">(</span></span><span class="token string">'$stateChangeSuccess'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">updateView<span class="token punctuation">(</span></span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<hr>

<p>大体的模板渲染过程就是这样的，这里遇到一个问题，就是：每一个 <code class=" language-javascript">div<span class="token punctuation">[</span>ui<span class="token operator">-</span>view<span class="token punctuation">]</span></code>在重新渲染的时候如何获取到对应视图模板的呢?</p>

<p>要想知道这个答案，</p>

<p>首先，我们得先看一下模板如何设置？</p>

<p>一般在设置<code class=" language-javascript">单视图</code>的时候，我们会这样做：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'contacts'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        abstract<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'/contacts'</span><span class="token punctuation">,</span>
        templateUrl<span class="token punctuation">:</span> <span class="token string">'app/contacts/contacts.html'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>在配置对象里面，我们用<code class=" language-javascript">templateUrl</code>指定模板路径即可。</p>

<p>如果我们需要设置<code class=" language-javascript">多视图</code>，就需要用到<code class=" language-javascript">views字段</code>，像这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'contacts.detail'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">'/{contactId:[0-9]{1,4}}'</span><span class="token punctuation">,</span>
        views<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">''</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                templateUrl<span class="token punctuation">:</span> <span class="token string">'app/contacts/contacts.detail.html'</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">'hint@'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                template<span class="token punctuation">:</span> <span class="token string">'This is contacts.detail populating the "hint" ui-view'</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">'menuTip'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                templateProvider<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'$stateParams'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>$stateParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token string">'&lt;hr&gt;&lt;small class="muted"&gt;Contact ID: '</span> <span class="token operator">+</span> $stateParams<span class="token punctuation">.</span>contactId <span class="token operator">+</span> <span class="token string">'&lt;/small&gt;'</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>这里我们使用了另外两种方式设置模板：</p>

<ol>
<li><code class=" language-javascript">template</code>：直接指定模板内容，另外也可以是函数返回模板内容</li>
<li><code class=" language-javascript">templateProvider</code>：通过依赖注入的调用函数的方式返回模板内容</li>
</ol>

<p>上述我们介绍了设置<code class=" language-javascript">单视图</code>和<code class=" language-javascript">多视图</code>模板的方式，其实最终它们在ui.router内部都会被统一格式化成的<code class=" language-javascript">views</code>的形式，且它们的key值会做特殊变化：</p>

<p>上述的<code class=" language-javascript">单视图</code>会变成这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">views<span class="token punctuation">:</span> <span class="token punctuation">{</span>
   <span class="token comment" spellcheck="true"> // 模板内容会被安插在根路由模板(index.html)的匿名视图下
</span>    <span class="token string">'@'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        abstract<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'/contacts'</span><span class="token punctuation">,</span>
        templateUrl<span class="token punctuation">:</span> <span class="token string">'app/contacts/contacts.html'</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>

<p><code class=" language-javascript">多视图</code>会变成这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">views<span class="token punctuation">:</span> <span class="token punctuation">{</span>
   <span class="token comment" spellcheck="true"> // 模板内容会被安插在父路由(contacts)模板的匿名视图下
</span>    <span class="token string">'@contacts'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        templateUrl<span class="token punctuation">:</span> <span class="token string">'app/contacts/contacts.detail.html'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token comment" spellcheck="true"> // 模板内容会被安插在根路由(index.html)模板的名为hint视图下
</span>    <span class="token string">'hint@'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        template<span class="token punctuation">:</span> <span class="token string">'This is contacts.detail populating the "hint" ui-view'</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token comment" spellcheck="true"> // 模板内容会被安插在父路由(contacts)模板的名为menuTip视图下
</span>    <span class="token string">'menuTip@contacts'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            templateProvider<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'$stateParams'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>$stateParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token string">'&lt;hr&gt;&lt;small class="muted"&gt;Contact ID: '</span> <span class="token operator">+</span> $stateParams<span class="token punctuation">.</span>contactId <span class="token operator">+</span> <span class="token string">'&lt;/small&gt;'</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>

<p>我们会发现views对象里面的<code class=" language-javascript">key</code>变化了，最明显的是出现了一个<code class=" language-javascript">@</code>符号，其实这样的key值是ui.router的一个设计，它的原型是：<code class=" language-javascript">viewName <span class="token operator">+</span> <span class="token string">'@'</span> <span class="token operator">+</span> stateName</code>，解释下：</p>

<ol>
<li><code class=" language-javascript">viewName</code>
<ul><li>指的是<code class=" language-javascript">ui<span class="token operator">-</span>view<span class="token operator">=</span><span class="token string">"status"</span></code>中的’status’</li>
<li>也可以是”(空字符串)，因为会有匿名的<code class=" language-javascript">ui<span class="token operator">-</span>view</code>或者<code class=" language-javascript">ui<span class="token operator">-</span>view<span class="token operator">=</span><span class="token string">""</span></code></li></ul></li>
<li><code class=" language-javascript">stateName</code>
<ul><li>默认情况下是父路由的<code class=" language-javascript">state<span class="token punctuation">.</span>name</code>，因为子路由模板一般都安插在父路由的<code class=" language-javascript">ui<span class="token operator">-</span>view</code>中</li>
<li>也可以是”(空字符串)，表示最顶层rootState</li>
<li>还可以是任意的祖先<code class=" language-javascript">state<span class="token punctuation">.</span>name</code></li></ul></li>
</ol>

<p>这样原型的意思是，表示<strong>该模板将会被安插在名为stateName路由对应模板的viewName视图下</strong>(可以看看上面代码中的注释理解下)。</p>

<p><em>其实这也解释了之前我说的：“为什么state.name里面不能存在<code class=" language-javascript">@</code>符号”？因为<code class=" language-javascript">@</code>在这里被用于特殊含义了。</em></p>

<p>所以，到这里，我们就知道在<code class=" language-javascript">ui<span class="token operator">-</span>view</code>重新进行模板渲染时，是根据<code class=" language-javascript">viewName <span class="token operator">+</span> <span class="token string">'@'</span> <span class="token operator">+</span> stateName</code>来获取对应的视图模板内容(其实还有controller等)的。</p>

<hr>

<p>其实，由于路由有了<code class=" language-javascript">父与子</code>的关系，某种程度上就有了override(覆盖或者重写)可能。</p>

<p>父路由和子路由之间就存在着视图的override，像下面这段代码：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'contacts.detail'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">'/{contactId:[0-9]{1,4}}'</span><span class="token punctuation">,</span>
        views<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">'hint@'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
              template<span class="token punctuation">:</span> <span class="token string">'This is contacts.detail populating the "hint" ui-view'</span>
            <span class="token punctuation">}</span>       
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'contacts.detail.item'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">'/item/:itemId'</span><span class="token punctuation">,</span>
        views<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">'hint@'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
              template<span class="token punctuation">:</span> <span class="token string">' This is contacts.detail.item overriding the "hint" ui-view'</span>
            <span class="token punctuation">}</span>       
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>上面两个路由(state)存在着<code class=" language-javascript">父与子</code>的关系，且他们都对<code class=" language-javascript">@hint</code>定义了视图，那么当子路由被激活时(它的父路由也会被激活)，我们应该选择哪个视图配置呢？</p>

<p>答案是：子路由的配置。</p>

<p>具体的，ui.router是如何实现这样的视图override的呢？</p>

<p>简单地回答就是：通过javascript原型链实现的，你可以在每次路由切换成功后，尝试着打印出<code class=" language-javascript">$state<span class="token punctuation">.</span>current<span class="token punctuation">.</span>locals</code>这个变量一看究竟。</p>

<hr>

<p>还有一个很重要的问题，关乎性能：当我们子路由变化时，页面中所有的ui-view都会重新进行渲染吗？</p>

<p>答案是：不会，只会从子路由对应的视图开始局部重新渲染。</p>

<p>在每次路由变化时，ui.router会记录变化的子路由，并对子路由进行重新的预处理(包括controller，reslove等)，最后局部更新对应的ui-view，父路由部分是不会有任何变化的。</p>

<hr>

<h5>controller控制器</h5>

<p>有了模板之后，必然不可缺少controller向模板对应的作用域(scope)中填写数据，这样才可以渲染出动态数据。</p>

<p>我们可以为每一个视图添加不同的controller，就像下面这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'contacts'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        abstract<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'/contacts'</span><span class="token punctuation">,</span>
        templateUrl<span class="token punctuation">:</span> <span class="token string">'app/contacts/contacts.html'</span><span class="token punctuation">,</span>
        resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">'contacts'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'contacts'</span><span class="token punctuation">,</span>
                <span class="token keyword">function</span><span class="token punctuation">(</span> contacts<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> contacts<span class="token punctuation">.</span><span class="token function">all<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span><span class="token punctuation">]</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span>
        controller<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'$scope'</span><span class="token punctuation">,</span> <span class="token string">'$state'</span><span class="token punctuation">,</span> <span class="token string">'contacts'</span><span class="token punctuation">,</span> <span class="token string">'utils'</span><span class="token punctuation">,</span>
            <span class="token keyword">function</span> <span class="token punctuation">(</span>$scope<span class="token punctuation">,</span>   $state<span class="token punctuation">,</span>   contacts<span class="token punctuation">,</span>   utils<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token comment" spellcheck="true"> // 向作用域写数据
</span>            $scope<span class="token punctuation">.</span>contacts <span class="token operator">=</span> contacts<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>注意：controller是可以进行<code class=" language-javascript">依赖注入</code>的，它注入的对象有两种：</p>

<ol>
<li>已经注册的服务(service)，如：<code class=" language-javascript">$state</code>，<code class=" language-javascript">utils</code></li>
<li>上面的<code class=" language-javascript">reslove</code>定义的解决项(这个后面来说)，如：<code class=" language-javascript">contacts</code></li>
</ol>

<p>但是不管怎样，目的都是：向作用域里写数据。</p>

<hr>

<h5>reslove解决项</h5>

<p>resolve在state配置参数中，是一个对象(key-value)，每一个value都是一个可以依赖注入的函数，并且返回的是一个promise(当然也可以是值，resloved defer)。</p>

<p>我们通常会在resolve中，进行数据获取的操作，然后返回一个promise，就像这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">'contacts'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'contacts'</span><span class="token punctuation">,</span>
        <span class="token keyword">function</span><span class="token punctuation">(</span> contacts<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> contacts<span class="token punctuation">.</span><span class="token function">all<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">]</span>
 <span class="token punctuation">}</span></code></pre>

<p>上面有好多contacts，为了不混淆，我改一下代码：</p>

<pre class=" language-javascript"><code class=" language-javascript">resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">'myResolve'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'contacts'</span><span class="token punctuation">,</span>
        <span class="token keyword">function</span><span class="token punctuation">(</span>contacts<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> contacts<span class="token punctuation">.</span><span class="token function">all<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">]</span>
 <span class="token punctuation">}</span></code></pre>

<p>这样就看清了，我们定义了resolve，包含了一个myResolve的key，它对应的value是一个函数，依赖注入了一个服务contacts，调用了<code class=" language-javascript">contacts<span class="token punctuation">.</span><span class="token function">all<span class="token punctuation">(</span></span><span class="token punctuation">)</span></code>方法并返回了一个promise。</p>

<p>于是我们便可以在controller中引用myResolve，像这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">controller<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'$scope'</span><span class="token punctuation">,</span> <span class="token string">'$state'</span><span class="token punctuation">,</span> <span class="token string">'myResolve'</span><span class="token punctuation">,</span> <span class="token string">'utils'</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span>$scope<span class="token punctuation">,</span>   $state<span class="token punctuation">,</span>   contacts<span class="token punctuation">,</span>   utils<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment" spellcheck="true"> // 向作用域写数据
</span>    $scope<span class="token punctuation">.</span>contacts <span class="token operator">=</span> contacts<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre>

<p>这样做的目的：</p>

<ol>
<li>简化了controller的操作，将数据的获取放在resolve中进行，这在多个视图多个controller需要相同数据时，有一定的作用。</li>
<li>只有当reslove中的promise全部resolved(即数据获取成功)后，才会触发<code class=" language-javascript"><span class="token string">'$stateChangeSuccess'</span></code>切换路由，进而实例化controller，然后更新模板。</li>
</ol>

<hr>

<p>另外，子路由的resolve或者controller都是可以依赖注入父路由的resolve提供的数据服务，就像这样：</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'parent'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
        resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            parent<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'$q'</span><span class="token punctuation">,</span> <span class="token string">'$timeout'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>$q<span class="token punctuation">,</span> $timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">var</span> defer <span class="token operator">=</span> $q<span class="token punctuation">.</span><span class="token function">defer<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                $<span class="token function">timeout<span class="token punctuation">(</span></span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    defer<span class="token punctuation">.</span><span class="token function">resolve<span class="token punctuation">(</span></span><span class="token string">'parent'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> defer<span class="token punctuation">.</span>promise<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        template<span class="token punctuation">:</span> <span class="token string">'I am parent &lt;div ui-view&gt;&lt;/div&gt;'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'parent.child'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">'/child'</span><span class="token punctuation">,</span>
        resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            child<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'parent'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true"> // 调用父路由的解决项
</span>                <span class="token keyword">return</span> parent <span class="token operator">+</span> <span class="token string">' and child'</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        controller<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'child'</span><span class="token punctuation">,</span> <span class="token string">'parent'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>child<span class="token punctuation">,</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true"> // 调用自身的解决项，以及父路由的解决项
</span>            console<span class="token punctuation">.</span><span class="token function">log<span class="token punctuation">(</span></span>child<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        template<span class="token punctuation">:</span> <span class="token string">'I am child'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<hr>

<p>另外每一个视图也可以单独定义自己的resolve和controller，它们也是可以依赖注入自身的state.resolve，或者view下的resolve，或者父路由的reslove，就像这样：</p>

<p>html</p>

<pre class=" language-javascript"><code class=" language-javascript">  <span class="token operator">&lt;</span>div ui<span class="token operator">-</span>view<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div ui<span class="token operator">-</span>view<span class="token operator">=</span><span class="token string">"status"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></code></pre>

<p>javascript:</p>

<pre class=" language-javascript"><code class=" language-javascript">$stateProvider
    <span class="token punctuation">.</span><span class="token function">state<span class="token punctuation">(</span></span><span class="token string">'home'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">:</span> <span class="token string">'/home'</span><span class="token punctuation">,</span>
        resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>          
            common<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'$q'</span><span class="token punctuation">,</span> <span class="token string">'$timeout'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>$q<span class="token punctuation">,</span> $timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true"> // 公共的resolve
</span>                <span class="token keyword">var</span> defer <span class="token operator">=</span> $q<span class="token punctuation">.</span><span class="token function">defer<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                $<span class="token function">timeout<span class="token punctuation">(</span></span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    defer<span class="token punctuation">.</span><span class="token function">resolve<span class="token punctuation">(</span></span><span class="token string">'common data'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> defer<span class="token punctuation">.</span>promise<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        views<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">''</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    special<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'common'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>common<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true"> // 访问state.resolve
</span>                        console<span class="token punctuation">.</span><span class="token function">log<span class="token punctuation">(</span></span>common<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">'status'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    common<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true"> // 重写state.resolve
</span>                        <span class="token keyword">return</span> <span class="token string">'override common data'</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                controller<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'common'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>common<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true"> // 访问视图自身的resolve
</span>                    console<span class="token punctuation">.</span><span class="token function">log<span class="token punctuation">(</span></span>common<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p>总结一下：</p>

<ol>
<li>路由的controller除了可以依赖注入正常的service，也可以依赖注入resolve</li>
<li>子路由的resolve可以依赖注入父路由的resolve，也可以重写父路由的resolve供controller调用</li>
<li>路由可以有单独的state.resolve之外，还可以在views视图中单独配置resolve，视图resolve是可以依赖注入自身state.resolve甚至是父路由的state.resolve</li>
</ol>

<h3>结束语</h3>

<p>以上就是我看过源代码后，对ui.router的一些理解，以及对难懂的知识点的一些分析，如果有错误，还请指出，有不清楚的，欢迎留言。</p>

<p>原创文章，转载请说明出处：<a href="http://www.cnblogs.com/lovesueee/p/4442509.html">http://www.cnblogs.com/lovesueee/p/4442509.html</a>。</p><script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/tuiku.js"></script>
                </div>
                <div class="entry-meta">
                  <p>本站专栏文章皆为原创，转载请注明出处（带有 前端乱炖 字样）和本文的显式链接(<a href="http://www.html-js.com/article/2863">http://www.html-js.com/article/2863</a>)，本站和作者保留随时要求删除文章的权利！</p>
                </div>
              </div>
            <div class="tip-comments" style="display: none; left: 545.5px; top: 9438.5px;"><ul class="comment-list"></ul><form class="tip-comment-form"><textarea placeholder="添加讨论…" class="tip-comment-textarea"></textarea><div class="form-control"><button class="tip-submit" type="submit">提交</button></div></form></div><a class="tip-point active" data-id="4963" style="left: 183px; top: 1690px; background: rgb(165, 178, 46) none repeat scroll 0% 0%;"><div class="pulse-inner1"></div><div class="pulse-inner2"></div></a><a class="tip-point" data-id="17060" style="left: 20px; top: 1948px; background: rgb(126, 50, 245) none repeat scroll 0% 0%;"><div class="pulse-inner1"></div><div class="pulse-inner2"></div></a><a class="tip-point active" style="left: 536.5px; top: 9429.5px; background: rgb(11, 10, 75) none repeat scroll 0% 0%;"><div class="pulse-inner1"></div><div class="pulse-inner2"></div></a></article>
            <div id="comment" class="comment module">
              <div class="hd">评论</div>
              <div class="bd">
                <div class="publish">
                  <textarea id="comment-text" placeholder="参与讨论。支持markdown语法" class="input-block-level"></textarea>
                  <div id="comment-submit" class="btn comment-submit">发表评论</div>
                </div>
                <div class="comment-list">
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tva4.sinaimg.cn/crop.0.0.996.996.50/005JrvKfjw8f6ph5m57flj30ro0rpju1.jpg" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/9344" class="value url fn">Melon-9</a>
                          <div class="hd-time">7个月前</div></span>
                        <div class="html">添加了一枚【评注】:外面需要加上.config(['$routeProvider',function($routeProvider){
    $routeProvider.when()
}])</div>
                      </div>
                      <div class="time"><a data-nick="Melon-9" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tva1.sinaimg.cn/crop.0.0.453.453.50/7c858f21gw1edfl5or2gzj20cm0cmmz1.jpg" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/9229" class="value url fn">一无所惜</a>
                          <div class="hd-time">7个月前</div></span>
                        <div class="html"><p>感谢分享, 学到了很多新知识</p></div>
                      </div>
                      <div class="time"><a data-nick="一无所惜" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tva3.sinaimg.cn/crop.0.0.640.640.50/a54d5091jw8exukdlsoxqj20hs0hswf9.jpg" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/9195" class="value url fn">高淼淼淼淼</a>
                          <div class="hd-time">8个月前</div></span>
                        <div class="html"><p>求解，如果是sref，直接根据state跳转，渲染页面，比之前循环rules根据url找匹配state快没意见。但是sref跳转state之后，需要改变地址的hash，调试了一下，发现也是需要匹配rules的啊，所以这两种有什么明显的速度区别吗？</p></div>
                      </div>
                      <div class="time"><a data-nick="高淼淼淼淼" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/5735345468/50/5740465702/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/7709" class="value url fn">yaoels</a>
                          <div class="hd-time">1年前</div></span>
                        <div class="html"><p>写的真的很好~赞</p></div>
                      </div>
                      <div class="time"><a data-nick="yaoels" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/5735345468/50/5740465702/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/7709" class="value url fn">yaoels</a>
                          <div class="hd-time">1年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="yaoels" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp4.sinaimg.cn/1677655471/50/40034267713/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/1669" class="value url fn">Mr_季</a>
                          <div class="hd-time">1年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="Mr_季" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp3.sinaimg.cn/2437749982/50/40050691473/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/3958" class="value url fn">河伯刘凤杰</a>
                          <div class="hd-time">1年前</div></span>
                        <div class="html"><p>mark</p></div>
                      </div>
                      <div class="time"><a data-nick="河伯刘凤杰" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/1218678580/50/1281358668/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/6792" class="value url fn">BeiBeiheihei</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="BeiBeiheihei" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp4.sinaimg.cn/2230140707/50/5655826537/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/3390" class="value url fn">大竹子君</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html"><p>啦啦啦，没想到学习到这么晚又有大收获！抱歉不是您的这一篇啦作者同学，而是博客园的这个：<a href="http://www.cnblogs.com/liulangmao/p/4155015.html">http://www.cnblogs.com/liulangmao/p/4155015.html</a>。
我觉得把您的这一篇和这一篇结合起来看简直就无敌了！您的这篇文章更适合已经使用过一段时间ui.router并且想了解源码的同学（当然也应该正好是您
本来的目的），不过，链接这一篇讲的也太详细了吧，一定是个处女座，而且附带了大量口语化的说明，对于我这种急于马上上手做项目，遇到一个小细节绕不过去
就要撞墙的人来说简直太好了，不过那个文章想评论还要注册，所以就来您这里吐槽一下好了。谢谢！</p></div>
                      </div>
                      <div class="time"><a data-nick="大竹子君" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp2.sinaimg.cn/2275360065/50/5685021039/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/2352" class="value url fn">Grimmjow</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="Grimmjow" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp2.sinaimg.cn/2662991013/50/5721050627/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/5888" class="value url fn">_君心_</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">添加了一枚【评注】:和好好好好！！！！</div>
                      </div>
                      <div class="time"><a data-nick="_君心_" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp4.sinaimg.cn/1930844911/50/1295707630/0" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/5931" class="value url fn">蓝穗的夜</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html"><p>不明觉厉，赞~</p></div>
                      </div>
                      <div class="time"><a data-nick="蓝穗的夜" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/1893906792/50/40039103183/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/2562" class="value url fn">Archer_小A</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="Archer_小A" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/1973769700/50/5678264169/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/2151" class="value url fn">袁家小黑球</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html"><p>我也在使用ui.route感觉很不错，很灵活，但是没有楼主理解这么深，学习了</p></div>
                      </div>
                      <div class="time"><a data-nick="袁家小黑球" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/1973769700/50/5678264169/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/2151" class="value url fn">袁家小黑球</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="袁家小黑球" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp2.sinaimg.cn/1734409185/50/40022299601/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/34" class="value url fn">前端乱炖</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="前端乱炖" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/1693118792/50/5645521395/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/639" class="value url fn">tcdona</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="tcdona" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp3.sinaimg.cn/2311757602/50/0/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/3945" class="value url fn">水哥_water</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="水哥_water" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp2.sinaimg.cn/1910955521/50/39996983592/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/5795" class="value url fn">chenney</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="chenney" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp3.sinaimg.cn/2285012122/50/5717000269/1" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/5794" class="value url fn">缪韩稀</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="缪韩稀" class="reply">回复</a></div>
                    </div>
                  </div>
                  <div class="comment-item clearfix"><a class="headpic"><img data-original="http://tp1.sinaimg.cn/2294863960/50/40056756915/0" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="http://www.html-js.com/user/3953" class="value url fn">蔡小菜说</a>
                          <div class="hd-time">2年前</div></span>
                        <div class="html">赞了此文章！</div>
                      </div>
                      <div class="time"><a data-nick="蔡小菜说" class="reply">回复</a></div>
                    </div>
                  </div>
                </div>
                <script id="comment-tpl" type="text/template">
                  <div class="comment-item clearfix"><a class="headpic"><img src="{{user_headpic}}" width="70" height="70"></a>
                    <div class="comment-right">
                      <div class="con"><span class="author vcard item"><a rel="author" href="/user/{{user_id}}" class="value url fn">{{user_nick}}：</a></span>
                        <div class="html">{{{html}}}</div>
                      </div>
                      <div class="time">{{createdAt}}<a data-nick="{{user_nick}}" class="reply">回复</a></div>
                    </div>
                  </div>
                </script>
              </div>
            </div>
          </div>
        </div>
        <div class="right"><!--<a target="_blank" href="http://www.oneapm.com/bi/feature.html?utm_source=htmljs&amp;utm_medium=billboard&amp;utm_term=bi&amp;utm_campaign=JulyTechAds&amp;from=maadfisejs" style="width:100%;display:block;margin-top:20px;" class="ad-blank"><img src="http://htmljs.b0.upaiyun.com/uploads/1436597035936-4450bd15970bac6348a570d12c151324.png"></a>-->
          <div style="padding:0;margin-top:20px;" class="module"><img src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1417158556053--5.png"></div>
          <div class="writer-and-column clearfix">
            <div class="writer module">
              <div class="hd">WRITTEN BY</div>
              <!--a.head-pic(href="/user/#{writer.id}")-->
              <!--  img(src='#{writer.head_pic}')-->
              <div class="info"><a href="http://www.html-js.com/user/1200" class="nick">Lovesueee</a>
                <div class="desc">阿里国际UED-前端（微博：Lovesueee）

长期求简历：maxin.mx#alibaba-inc.com（#换成@）</div><a href="http://weibo.cn/1916206563" target="_blank" class="weibo">TA的新浪微博</a>
              </div>
            </div>
            <div class="column module">
              <div class="hd">PUBLISHED IN</div>
              <div class="info"><a href="http://www.html-js.com/article/column/693" class="name">前端源码解析</a>
                <div class="desc"><p>学习，了解最好的前端框架~~</p></div>
                <div class="action"><a href="http://www.html-js.com/article/column/1/rss" class="rssit btn small-btn"><i class="rss social"></i> 订阅</a></div>
              </div>
            </div>
          </div>
          <div class="other-articles module">
            <div class="hd">本专栏其他文章</div>
            <div class="bd">
              <div class="item"><a href="http://www.html-js.com/article/2863">【原创】ui.router源码解析</a>
                <div class="others"><span class="time">时间:2015-04-20</span><span class="visit_count">浏览:15141</span><span class="zan_count">赞:12</span></div>
              </div>
              <div class="item"><a href="http://www.html-js.com/article/2501">【原创】angularjs1.3.0源码解析之service</a>
                <div class="others"><span class="time">时间:2014-12-04</span><span class="visit_count">浏览:3841</span><span class="zan_count">赞:5</span></div>
              </div>
              <div class="item"><a href="http://www.html-js.com/article/2447">【原创】angularjs1.3.0源码解析之directive</a>
                <div class="others"><span class="time">时间:2014-11-24</span><span class="visit_count">浏览:16405</span><span class="zan_count">赞:9</span></div>
              </div>
              <div class="item"><a href="http://www.html-js.com/article/2365">【原创】angularjs1.3.0源码解析之scope</a>
                <div class="others"><span class="time">时间:2014-10-30</span><span class="visit_count">浏览:6821</span><span class="zan_count">赞:3</span></div>
              </div>
              <div class="item"><a href="http://www.html-js.com/article/2364">【原创】angularjs1.3.0源码解析之执行流程</a>
                <div class="others"><span class="time">时间:2014-10-30</span><span class="visit_count">浏览:10779</span><span class="zan_count">赞:8</span></div>
              </div>
            </div>
          </div>
          <div class="bottom-action module">
            <div class="wrapper">
              <div class="actions"><a href="javascript:void(0);" class="zan action"><i class="icon-thumbs-up"></i><em>赞</em> <span>12</span></a><span class="zanlogs"><a href="http://www.html-js.com/user/7709" data-original-title="" class="tooltip-trigger"><img data-original="http://tp1.sinaimg.cn/5735345468/50/5740465702/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_002.jpg"></a><a href="http://www.html-js.com/user/1669" data-original-title="一个喜欢探索新技术的极客" class="tooltip-trigger"><img data-original="http://tp4.sinaimg.cn/1677655471/50/40034267713/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_003.jpg"></a><a href="http://www.html-js.com/user/6792" data-original-title="~" class="tooltip-trigger"><img data-original="http://tp1.sinaimg.cn/1218678580/50/1281358668/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_008.jpg"></a><a href="http://www.html-js.com/user/2352" data-original-title="关注前端开发，用户体验，视觉设计，技术和设计相结合！" class="tooltip-trigger"><img data-original="http://tp2.sinaimg.cn/2275360065/50/5685021039/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1.jpg"></a><a href="http://www.html-js.com/user/2562" data-original-title="http://xiaoa.name" class="tooltip-trigger"><img data-original="http://tp1.sinaimg.cn/1893906792/50/40039103183/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_005.jpg"></a><a href="http://www.html-js.com/user/2151" data-original-title="从事Hybrid App开发" class="tooltip-trigger"><img data-original="http://tp1.sinaimg.cn/1973769700/50/5678264169/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_007.jpg"></a><a href="http://www.html-js.com/user/34" data-original-title="专注前端技术和关爱前端人员情感问题20年 http://www.html-js.com" class="tooltip-trigger"><img data-original="http://tp2.sinaimg.cn/1734409185/50/40022299601/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_004.jpg"></a><a href="http://www.html-js.com/user/639" data-original-title="(love life, interesting oriented, sometimes, performance art)" class="tooltip-trigger"><img data-original="http://tp1.sinaimg.cn/1693118792/50/5645521395/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_006.jpg"></a><a href="http://www.html-js.com/user/3945" data-original-title="" class="tooltip-trigger"><img data-original="http://tp3.sinaimg.cn/2311757602/50/0/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1.gif"></a><a href="http://www.html-js.com/user/5795" data-original-title="凡人" class="tooltip-trigger"><img data-original="http://tp2.sinaimg.cn/1910955521/50/39996983592/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_010.jpg"></a><a href="http://www.html-js.com/user/5794" data-original-title="" class="tooltip-trigger"><img data-original="http://tp3.sinaimg.cn/2285012122/50/5717000269/1" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1_009.jpg"></a><a href="http://www.html-js.com/user/3953" data-original-title="" class="tooltip-trigger"><img data-original="http://tp1.sinaimg.cn/2294863960/50/40056756915/0" style="display: inline;" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/0.jpg"></a></span>
              </div>
              <div class="actions"><a target="_blank" href="http://service.weibo.com/share/share.php?url=http%3A%2F%2Fwww.html-js.com%2Farticle%2F2863&amp;title=%E5%88%86%E4%BA%AB%E4%B8%80%E7%AF%87@Lovesueee%20%E7%9A%84%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0%E3%80%90%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E3%80%91%E6%9D%A5%E8%87%AA@%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96%20%E4%B8%93%E6%A0%8F%E3%80%8C%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E3%80%8D%20%E3%80%82%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96%E6%98%AF%E4%B8%80%E4%B8%AA%E4%B8%93%E4%B8%9A%E7%9A%84%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E5%8E%9F%E5%88%9B%E5%86%85%E5%AE%B9%E7%A4%BE%E5%8C%BA&amp;pic=http://www.html-js.com/uploads/article_thumb/2863.png&amp;appkey=659341943" class="action"><i class="icon-new-window"></i><em style="background:none !important;float:none;display:inline;padding:0;" class="bds_more">分享到微博</em></a><a href="javascript:void(0);" class="add_fav action"><em>收藏</em> <span>7</span></a>
              </div>
            </div>
          </div>
          <div id="fixed-modules" style="position: fixed; top: 0px;" class="fixed"><a target="_blank" href="http://www.appcan.cn/" style="width:100%;display:block;" class="ad-blank"><img src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1430307535247-.gif"></a><a target="_blank" href="http://www.jiankongbao.com/" style="width:100%;display:block;" class="ad-blank"><img src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/1461145783134-4e913d3582645ce5b5e12859c8b62b94.jpg"></a>
            <!--a.ad-blank(target="_blank",href="https://coding.net/marketing/codeinsight?hmsr=http%3A%2F%2Fwww.html-js.com%2F&hmmd=%E5%9B%BE%E7%89%87%E5%B9%BF%E5%91%8A&hmpl=CodeInsight&hmkw=&hmci=",style="width:280px;height:120px;display:block;")-->
            <!--  img(src="http://htmljs.b0.upaiyun.com/uploads/1425371986895-coding.png")-->
          </div>
        </div>
      </div>
      <p>
        <script id="bdshare_js" data="type=tools&amp;uid=2555549" src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/bds_s_v2.js"></script>
        
        <script type="text/javascript">
        var bds_config={"bdText":"分享一篇@Lovesueee 的原创文章【【原创】ui.router源码解析】来自@前端乱炖 专栏「前端源码解析」 {{前端乱炖是国内最专业的前端知识原创内容社区}}","bdPic":"http://www.html-js.com/uploads/article_thumb/2863.png","snsKey":{'tsina':'659341943','tqq':'','t163':'','tsohu':''}}
        document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
        </script>
      </p>
      <script id="tip_tpl" type="text/template">
        {{#tips}}
          <li class="ng-scope single-comment pin-comment">
            <div class="comment-body ng-binding" >{{content}}</div>
            <div class="comment-meta">
              <span class="author-name ng-binding">— {{user_nick}} </span>
              <time class="create-time" >{{time}}</time>
            </div>
          </li>
          {{/tips}}
      </script>
    </div>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/mustache.js"></script>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/messageTip.js"></script><div class="message-tip" style="display: none;">欢迎光临</div>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/loadingTip.js"></script><div class="loading-tip">正在加载中。。。</div>
    <script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/lazyload.js"></script>
    <script>
      $(window).scroll(function(){
        if($(window).scrollTop()+$(window).height()>=$(".comment").offset().top){
          $(".comment-layer").addClass("hidden")
        }else{
        $(".comment-layer").removeClass("hidden")
        }
        })
      $(".comment-layer").click(function(){
        $("html,body").animate({
          scrollTop:$(".comment").offset().top-200
          })
        $(".comment textarea").focus()
        })
      var comment_tpl = $("#comment-tpl").html()
      //- loadingTip.show("评论加载中")
      //- $.ajax({
      //-   url:"/comment/article_2863",
      //-   type:"get",
      //-   dataType:"json",
      //-   success:function(data){
      //-     loadingTip.hide("正在提交中")
      //-       if(data.success){
      //-       for(var i=0;i<data.comments.length;i++){
      //-       var comment = data.comments[i]
      //-         var html = Mustache.render(comment_tpl,comment);
      //-         $(".comment-list").append(html)
      //-         $(".reply").click(function(){
      //-   $("#comment-text").val("@"+$(this).attr("data-nick")+" ").focus()
      //-    $("#comment-text")[0].setSelectionRange($("#comment-text")[0].value.length, $("#comment-text")[0].value.length)
      //-   })
      //-       }
      //-       }else{
      //-       alert(data.info)
      //-       }
      
      //-   }
      //-   })
      $(".headpic img").lazyload();
      $(".tooltip-trigger img").lazyload();
      $(".reply").click(function(){
        $("#comment-text").val("@"+$(this).attr("data-nick")+" ").focus()
         $("#comment-text")[0].setSelectionRange($("#comment-text")[0].value.length, $("#comment-text")[0].value.length)
        })
      $("#comment-submit").click(function(){
        var text = $("#comment-text").val();
        if(!text){
          messageTip.show("请输入评论内容");
        }else{
          loadingTip.show("正在提交中")
           HtmlJS.util.ajax("/comment/add",{
              md:text,
              target_id:"article_2863"
           },"post",function(data){
              loadingTip.hide()
                if(data.success){
                $("#comment-text").val("")
                var html = Mustache.render(comment_tpl,data.comment);
                  $(".comment-list").prepend(html)
                }else{
                  alert(data.info)
                }
           },function(){
           
            },null,function(){
            HtmlJS.util.ajax("/comment/add",{
              md:text,
              target_id:"article_2863"
            },"post",function(data){
              loadingTip.hide()
                if(data.success){
                $("#comment-text").val("")
                var html = Mustache.render(comment_tpl,data.comment);
                  $(".comment-list").prepend(html)
                }else{
                  alert(data.info)
                }
            },function(){
            
            },null,function(){
            
          })
          })
        }
        })
        
        $(".zan").click(function(){
          var self = this;
            HtmlJS.util.ajax("/article/2863/zan",{
              score:$(self).attr("data-index")
            },"post",function(data){
              loadingTip.hide()
                if(data.success){
                
                  messageTip.show("成功！")
                    $("em",self).html("已赞")
                    $("span",self).html($("span",self).html()*1+1)
                }else{
                  alert(data.info)
                }
            },function(){
            
            },null,function(){
            HtmlJS.util.ajax("/article/2863/zan",{
              score:$(self).attr("data-index")
            },"post",function(data){
              loadingTip.hide()
                if(data.success){
                  messageTip.show("成功！")
                    $("em",self).html("已赞")
                    $("span",self).html($("span",self).html()*1+1)
                }else{
                  alert(data.info)
                }
            },function(){
            
            },null,function(){
            
          })
          })
          })
          $('.user').tooltip({
          placement:"bottom"
          });
          $(".add_fav").click(function(){
            var self=this;
            HtmlJS.util.ajax("/user/fav",{
              uuid:"0addeb3b-d6e9-4dae-8b1b-bab9ac19dd2b"
            },"post",function(data){
                loadingTip.hide()
                if(data.success){
                  messageTip.show("收藏成功！")
                    $("em",self).html("已收藏")
                     $("span",self).html($("span",self).html()*1+1)
                }else{
                  alert(data.info)
                }
            },function(){},null,function(){
                HtmlJS.util.ajax("/user/fav",{
                  uuid:"0addeb3b-d6e9-4dae-8b1b-bab9ac19dd2b"
                },"post",function(data){
                    loadingTip.hide()
                    if(data.success){
                      messageTip.show("收藏成功！")
                         $("em",self).html("已收藏")
                          $("span",self).html($("span",self).html()*1+1)
                    }else{
                      alert(data.info)
                    }
                },function(){
                })
            })
            });
            $(document).ready(function(){
                if($(window).width()>600){
                  new Tip().init({
                      selector:".post",
                      url:"/tip/add",
                      uuid:"2863"
                  })
                }
                
            })
            
    </script>
    <div id="footer">
      <div class="wrapper">
        <div class="module">
          <div style="font-size:12px;line-height:20px;">Power By NodeJS，本站所有代码的地址在<a href="https://github.com/xinyu198736/htmljs" target="_blank">这里</a>  浙ICP备12047043号  <a href="http://www.html-js.com/friendlink">友情链接</a>  <a href="https://f2e.souche.com/blog" target="_blank">大搜车前端团队博客</a></div>
        </div>
      </div>
    </div>
    <div id="coin-fixed"><span id="gotop"><i class="icon-airplane"></i></span><span class="my-favs"><i class="icon-heart"></i><a href="http://www.html-js.com/user/fav"> 我的收藏      </a></span>
    </div>
    <script>
      try{
        $('.tooltip-trigger').tooltip({
              placement:"bottom"
              });
      }catch(e){};
      
      
      
    </script>
    <div class="hidden">
      <script>
        var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
        document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F2fc2fae0509f820259c1760fce28d7d2' type='text/javascript'%3E%3C/script%3E"));
        
      </script><script src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/h.js" type="text/javascript"></script><a href="http://tongji.baidu.com/hm-web/welcome/ico?s=2fc2fae0509f820259c1760fce28d7d2" target="_blank"><img src="%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91ui.router%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%20-%20%E5%89%8D%E7%AB%AF%E4%B9%B1%E7%82%96_files/21.gif" width="20" height="20" border="0"></a>
    </div>
  
</body></html>